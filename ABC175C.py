#Dが奇数の場合は元の場所には絶対戻れない、偶数の場合は同じところを往復することで偶数回移動を消費できる
#とりあえず0に近い方が嬉しいから0に近づく
x,k,d = map(int,input().split())
x = abs(x) #x<0 の場合はx:=-x と置換した場合に対応するため一般性を失うことはない
nokori = k #残りの移動回数
c = min(x//d,k) #0に向かって移動する回数
x -= d*c
nokori -= c
if nokori>0: #残り回数の場合分け
  if nokori%2==1: #残り回数が偶数ならばその場に留まれば良く、奇数の場合は隣に動くしかないため x-d 分移動する (∵ |x-d| <= x+d )
    x = x-d
print(abs(x))